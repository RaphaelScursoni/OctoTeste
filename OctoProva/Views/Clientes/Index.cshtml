<!--Importando Bibliotecas para paginação-->
@model X.PagedList.IPagedList<OctoProva.Models.Cliente>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
@using X.PagedList;

<!--Chamada para a View-->
@{
    ViewData["Title"] = "Index";
}

<h2>Lista de Clientes</h2>

<p>
    <a asp-action="CriarCliente">Criar um novo Cliente</a>
</p>
    <!--Mostrando o título das colunas-->
<table class="table">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Documento
            </th>
            <th>
                Email
            </th>
            <th>
                Tipo 1°Telefone
            </th>
            <th>
                1°Telefone
            </th>
            <th>
                Tipo 2°Telefone
            </th>
            <th>
                2°Telefone
            </th>
            <th>
                Tipo Endereço
            </th>
            <th>
                Endereço
            </th>
            <th>
                CEP
            </th>
            <th>
                Número
            </th>
            <th>
                Complemento
            </th>
            <th>
                Bairro
            </th>
            <th>
                Cidade
            </th>
            <th>
                UF
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
<!--Retornando os valores das colunas-->
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
           <td>
                @Html.DisplayFor(modelItem => item.Documento) 
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoTelefone1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoTelefone2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoEndereco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CEP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Numero)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Complemento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bairro)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UF)
            </td>
            <td>
                    @if(item.Documento.Length > 16) { <a asp-action="EditarClientePessoaJuridica" asp-route-id="@item.Id">Editar</a>}
                    @if(item.Documento.Length < 16) { <a asp-action="EditarClientePessoaFisica" asp-route-id="@item.Id">Editar</a>}
                    <a asp-action="ExcluirCliente" asp-route-id="@item.Id">Deletar</a>
            </td>
        </tr>
}
    </tbody>
</table>

<!--Páginas para a lista-->
Página @Model.PageNumber de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new {pagina = page}))